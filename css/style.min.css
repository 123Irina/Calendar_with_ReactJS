/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*{box-sizing:border-box;font-family:sans-serif}.allContainer{background-color:#eef3ea;padding:20px}h1,p{margin:0}.AllCalenar{background-color:#fff;width:80%;padding:10px;margin:0 auto}button:active,input:active{outline:0}button:focus,input:focus{outline:0}.td,button{cursor:pointer}.calendarDay{padding:5px}.today{background-color:#f5f5f5}.today .calendarDay{display:inline-block;border-radius:50%;background-color:#039be5;color:#fff}.calendarHead{padding-right:25px}.calendarHead h1{margin-bottom:15px}.calendarHead .today{padding-left:10px;padding-right:10px}.calendarHead .inline-block{display:inline-block;margin-right:10px;line-height:30px;margin-bottom:15px}.calendarHead .inline-block span.month{text-transform:capitalize}.calendarHead .inline-block button{background-color:transparent;border:none;font-size:25px}.calendarHead .searchBlock{display:inline-block;float:right}.calendarHead .searchBlock:after{content:'';display:table;clear:both}.calendarHead .searchBlock button{height:30px;border:none;background-color:transparent}.calendarHead .searchBlock input{line-height:26px;box-shadow:inset .2em .2em #e0e0e0;border-radius:5px;padding-left:10px;padding-right:10px;font-size:12px;min-width:160px}.weekDay{border-left:5px solid #e0e0e0}.weekDay div{height:auto;border-bottom:none;display:inline-block;width:14%;border-right:1px solid #e0e0e0;border-top:1px solid #e0e0e0;padding:5px 5px 0}.calendarBody{font-size:0;border-bottom:none;border-left:5px solid #e0e0e0}.calendarBody .td{width:14%;height:20vh;display:inline-block;border-bottom:1px solid #e0e0e0;border-right:1px solid #e0e0e0;font-size:14px;min-height:20px;overflow:hidden;padding:5px}.calendarBody .td .planHeader{margin-top:5px}.calendarBody .td .planHeader .allDayPlan{background-color:#039be5;color:#fff;white-space:nowrap;line-height:20px;padding-left:10px}.calendarBody .td .planHeader .timeDayPlan{padding-top:5px;padding-left:5px}.calendarBody .td .planHeader .timeDayPlan span{line-height:18px;white-space:nowrap}.calendarBody .td .planHeader .timeDayPlan span:before{display:inline-block;content:"";width:5px;height:5px;margin-right:5px;background-color:#039be5;border:1px solid #039be5}.calendarBody [data-month=before],.calendarBody [data-month=next]{color:#d3d3d3}.hidden{display:none}.modalBackground{width:100%;height:100%;background-color:rgba(224,224,224,.25);position:fixed;top:0;left:0;padding:5%}.modalBackground .add,.modalBackground .close,.modalBackground .delete,.modalBackground .edit,.modalBackground .save{outline:0;padding:5px;border-radius:5px;font-size:14px;color:#000}.modalBackground .add{background-color:#32cd32}.modalBackground .edit{background-color:#006eca}.modalBackground .delete{background-color:red}.modalBackground .close{background-color:transparent}.modalBackground .save{height:35px;background-color:#32cd32;margin:0 auto;padding:0 15px}.modalBackground .ModalMessage,.modalBackground .modalEvent,.modalBackground .modalWindowBody,.modalBackground .modalWindowSearch{background-color:#eef3ea;border-radius:5px;border:2px solid gray;width:80%;max-width:500px;min-height:200px;overflow-y:scroll;margin:0 auto;padding:5px;z-index:10000}.modalBackground .ModalMessage div,.modalBackground .ModalMessage p,.modalBackground .modalEvent div,.modalBackground .modalEvent p,.modalBackground .modalWindowBody div,.modalBackground .modalWindowBody p,.modalBackground .modalWindowSearch div,.modalBackground .modalWindowSearch p{padding:5px}.modalBackground .ModalMessage{text-align:center}.modalBackground .ModalMessage .message{margin-bottom:5%;padding:5%}.modalBackground .ModalMessage .message p{padding-top:5px}.modalBackground .modalWindowBody div.date{margin-top:10px}.plansContainer div{cursor:pointer;background-color:#fff;margin-bottom:6px;border-radius:5px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
